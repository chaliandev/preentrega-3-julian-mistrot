// ==========================================================================
// RESPONSIVE UTILITIES - CHALIAN JOYER√çA
// ==========================================================================

// Responsive breakpoints
@each $breakpoint, $width in (
  sm: $breakpoint-sm,
  md: $breakpoint-md,
  lg: $breakpoint-lg,
  xl: $breakpoint-xl,
  xxl: $breakpoint-xxl
) {
  @include respond-to($breakpoint) {
    // Container responsive
    .container-#{$breakpoint} {
      max-width: map-get($container-max-widths, $breakpoint);
    }
    
    // Grid responsive
    @for $i from 1 through 12 {
      .col-#{$breakpoint}-#{$i} {
        flex: 0 0 percentage($i / 12);
        max-width: percentage($i / 12);
      }
    }
    
    // Order responsive
    @for $i from 0 through 12 {
      .order-#{$breakpoint}-#{$i} {
        order: $i;
      }
    }
    
    // Display responsive
    .d-#{$breakpoint}-none { display: none !important; }
    .d-#{$breakpoint}-inline { display: inline !important; }
    .d-#{$breakpoint}-inline-block { display: inline-block !important; }
    .d-#{$breakpoint}-block { display: block !important; }
    .d-#{$breakpoint}-table { display: table !important; }
    .d-#{$breakpoint}-table-row { display: table-row !important; }
    .d-#{$breakpoint}-table-cell { display: table-cell !important; }
    .d-#{$breakpoint}-flex { display: flex !important; }
    .d-#{$breakpoint}-inline-flex { display: inline-flex !important; }
    
    // Flex responsive
    .flex-#{$breakpoint}-row { flex-direction: row !important; }
    .flex-#{$breakpoint}-column { flex-direction: column !important; }
    .flex-#{$breakpoint}-row-reverse { flex-direction: row-reverse !important; }
    .flex-#{$breakpoint}-column-reverse { flex-direction: column-reverse !important; }
    
    .flex-#{$breakpoint}-wrap { flex-wrap: wrap !important; }
    .flex-#{$breakpoint}-nowrap { flex-wrap: nowrap !important; }
    .flex-#{$breakpoint}-wrap-reverse { flex-wrap: wrap-reverse !important; }
    
    .justify-content-#{$breakpoint}-start { justify-content: flex-start !important; }
    .justify-content-#{$breakpoint}-end { justify-content: flex-end !important; }
    .justify-content-#{$breakpoint}-center { justify-content: center !important; }
    .justify-content-#{$breakpoint}-between { justify-content: space-between !important; }
    .justify-content-#{$breakpoint}-around { justify-content: space-around !important; }
    .justify-content-#{$breakpoint}-evenly { justify-content: space-evenly !important; }
    
    .align-items-#{$breakpoint}-start { align-items: flex-start !important; }
    .align-items-#{$breakpoint}-end { align-items: flex-end !important; }
    .align-items-#{$breakpoint}-center { align-items: center !important; }
    .align-items-#{$breakpoint}-baseline { align-items: baseline !important; }
    .align-items-#{$breakpoint}-stretch { align-items: stretch !important; }
    
    .align-self-#{$breakpoint}-start { align-self: flex-start !important; }
    .align-self-#{$breakpoint}-end { align-self: flex-end !important; }
    .align-self-#{$breakpoint}-center { align-self: center !important; }
    .align-self-#{$breakpoint}-baseline { align-self: baseline !important; }
    .align-self-#{$breakpoint}-stretch { align-self: stretch !important; }
    
    .flex-#{$breakpoint}-fill { flex: 1 1 auto !important; }
    .flex-#{$breakpoint}-grow-0 { flex-grow: 0 !important; }
    .flex-#{$breakpoint}-grow-1 { flex-grow: 1 !important; }
    .flex-#{$breakpoint}-shrink-0 { flex-shrink: 0 !important; }
    .flex-#{$breakpoint}-shrink-1 { flex-shrink: 1 !important; }
    
    // Text responsive
    .text-#{$breakpoint}-start { text-align: left !important; }
    .text-#{$breakpoint}-end { text-align: right !important; }
    .text-#{$breakpoint}-center { text-align: center !important; }
    .text-#{$breakpoint}-justify { text-align: justify !important; }
    
    // Float responsive
    .float-#{$breakpoint}-start { float: left !important; }
    .float-#{$breakpoint}-end { float: right !important; }
    .float-#{$breakpoint}-none { float: none !important; }
    
    // Width responsive
    .w-#{$breakpoint}-25 { width: 25% !important; }
    .w-#{$breakpoint}-50 { width: 50% !important; }
    .w-#{$breakpoint}-75 { width: 75% !important; }
    .w-#{$breakpoint}-100 { width: 100% !important; }
    .w-#{$breakpoint}-auto { width: auto !important; }
    
    // Height responsive
    .h-#{$breakpoint}-25 { height: 25% !important; }
    .h-#{$breakpoint}-50 { height: 50% !important; }
    .h-#{$breakpoint}-75 { height: 75% !important; }
    .h-#{$breakpoint}-100 { height: 100% !important; }
    .h-#{$breakpoint}-auto { height: auto !important; }
    
    // Position responsive
    .position-#{$breakpoint}-static { position: static !important; }
    .position-#{$breakpoint}-relative { position: relative !important; }
    .position-#{$breakpoint}-absolute { position: absolute !important; }
    .position-#{$breakpoint}-fixed { position: fixed !important; }
    .position-#{$breakpoint}-sticky { position: sticky !important; }
    
    // Visibility responsive
    .visible-#{$breakpoint} { visibility: visible !important; }
    .invisible-#{$breakpoint} { visibility: hidden !important; }
  }
}

// Responsive max-width utilities
@each $breakpoint, $width in (
  sm: $breakpoint-sm,
  md: $breakpoint-md,
  lg: $breakpoint-lg,
  xl: $breakpoint-xl
) {
  @include respond-to-max($breakpoint) {
    // Display responsive max
    .d-#{$breakpoint}-none { display: none !important; }
    .d-#{$breakpoint}-inline { display: inline !important; }
    .d-#{$breakpoint}-inline-block { display: inline-block !important; }
    .d-#{$breakpoint}-block { display: block !important; }
    .d-#{$breakpoint}-table { display: table !important; }
    .d-#{$breakpoint}-table-row { display: table-row !important; }
    .d-#{$breakpoint}-table-cell { display: table-cell !important; }
    .d-#{$breakpoint}-flex { display: flex !important; }
    .d-#{$breakpoint}-inline-flex { display: inline-flex !important; }
    
    // Text responsive max
    .text-#{$breakpoint}-start { text-align: left !important; }
    .text-#{$breakpoint}-end { text-align: right !important; }
    .text-#{$breakpoint}-center { text-align: center !important; }
    .text-#{$breakpoint}-justify { text-align: justify !important; }
    
    // Float responsive max
    .float-#{$breakpoint}-start { float: left !important; }
    .float-#{$breakpoint}-end { float: right !important; }
    .float-#{$breakpoint}-none { float: none !important; }
    
    // Width responsive max
    .w-#{$breakpoint}-25 { width: 25% !important; }
    .w-#{$breakpoint}-50 { width: 50% !important; }
    .w-#{$breakpoint}-75 { width: 75% !important; }
    .w-#{$breakpoint}-100 { width: 100% !important; }
    .w-#{$breakpoint}-auto { width: auto !important; }
    
    // Height responsive max
    .h-#{$breakpoint}-25 { height: 25% !important; }
    .h-#{$breakpoint}-50 { height: 50% !important; }
    .h-#{$breakpoint}-75 { height: 75% !important; }
    .h-#{$breakpoint}-100 { height: 100% !important; }
    .h-#{$breakpoint}-auto { height: auto !important; }
  }
}

// Responsive spacing utilities
@each $size, $value in (
  xs: $spacing-xs,
  sm: $spacing-sm,
  md: $spacing-md,
  lg: $spacing-lg,
  xl: $spacing-xl,
  xxl: $spacing-xxl
) {
  @each $breakpoint, $width in (
    sm: $breakpoint-sm,
    md: $breakpoint-md,
    lg: $breakpoint-lg,
    xl: $breakpoint-xl,
    xxl: $breakpoint-xxl
  ) {
    @include respond-to($breakpoint) {
      .m-#{$breakpoint}-#{$size} { margin: $value !important; }
      .mt-#{$breakpoint}-#{$size} { margin-top: $value !important; }
      .mb-#{$breakpoint}-#{$size} { margin-bottom: $value !important; }
      .ml-#{$breakpoint}-#{$size} { margin-left: $value !important; }
      .mr-#{$breakpoint}-#{$size} { margin-right: $value !important; }
      .mx-#{$breakpoint}-#{$size} { 
        margin-left: $value !important; 
        margin-right: $value !important; 
      }
      .my-#{$breakpoint}-#{$size} { 
        margin-top: $value !important; 
        margin-bottom: $value !important; 
      }
      
      .p-#{$breakpoint}-#{$size} { padding: $value !important; }
      .pt-#{$breakpoint}-#{$size} { padding-top: $value !important; }
      .pb-#{$breakpoint}-#{$size} { padding-bottom: $value !important; }
      .pl-#{$breakpoint}-#{$size} { padding-left: $value !important; }
      .pr-#{$breakpoint}-#{$size} { padding-right: $value !important; }
      .px-#{$breakpoint}-#{$size} { 
        padding-left: $value !important; 
        padding-right: $value !important; 
      }
      .py-#{$breakpoint}-#{$size} { 
        padding-top: $value !important; 
        padding-bottom: $value !important; 
      }
    }
  }
}

// Responsive font size utilities
@each $breakpoint, $width in (
  sm: $breakpoint-sm,
  md: $breakpoint-md,
  lg: $breakpoint-lg,
  xl: $breakpoint-xl,
  xxl: $breakpoint-xxl
) {
  @include respond-to($breakpoint) {
    .fs-#{$breakpoint}-1 { font-size: 3rem !important; }
    .fs-#{$breakpoint}-2 { font-size: 2.5rem !important; }
    .fs-#{$breakpoint}-3 { font-size: 2rem !important; }
    .fs-#{$breakpoint}-4 { font-size: 1.5rem !important; }
    .fs-#{$breakpoint}-5 { font-size: 1.25rem !important; }
    .fs-#{$breakpoint}-6 { font-size: 1rem !important; }
    .fs-#{$breakpoint}-7 { font-size: 0.875rem !important; }
    .fs-#{$breakpoint}-8 { font-size: 0.75rem !important; }
  }
}

// Responsive border radius utilities
@each $breakpoint, $width in (
  sm: $breakpoint-sm,
  md: $breakpoint-md,
  lg: $breakpoint-lg,
  xl: $breakpoint-xl,
  xxl: $breakpoint-xxl
) {
  @include respond-to($breakpoint) {
    .rounded-#{$breakpoint} { border-radius: $border-radius !important; }
    .rounded-#{$breakpoint}-0 { border-radius: 0 !important; }
    .rounded-#{$breakpoint}-1 { border-radius: 0.2rem !important; }
    .rounded-#{$breakpoint}-2 { border-radius: 0.375rem !important; }
    .rounded-#{$breakpoint}-3 { border-radius: 0.5rem !important; }
    .rounded-#{$breakpoint}-circle { border-radius: 50% !important; }
    .rounded-#{$breakpoint}-pill { border-radius: 50rem !important; }
  }
}

// Responsive shadow utilities
@each $breakpoint, $width in (
  sm: $breakpoint-sm,
  md: $breakpoint-md,
  lg: $breakpoint-lg,
  xl: $breakpoint-xl,
  xxl: $breakpoint-xxl
) {
  @include respond-to($breakpoint) {
    .shadow-#{$breakpoint} { box-shadow: $shadow-soft !important; }
    .shadow-#{$breakpoint}-sm { box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important; }
    .shadow-#{$breakpoint}-lg { box-shadow: $shadow-strong !important; }
    .shadow-#{$breakpoint}-none { box-shadow: none !important; }
  }
}

// Responsive overflow utilities
@each $breakpoint, $width in (
  sm: $breakpoint-sm,
  md: $breakpoint-md,
  lg: $breakpoint-lg,
  xl: $breakpoint-xl,
  xxl: $breakpoint-xxl
) {
  @include respond-to($breakpoint) {
    .overflow-#{$breakpoint}-auto { overflow: auto !important; }
    .overflow-#{$breakpoint}-hidden { overflow: hidden !important; }
    .overflow-#{$breakpoint}-visible { overflow: visible !important; }
    .overflow-#{$breakpoint}-scroll { overflow: scroll !important; }
  }
}

// Responsive position utilities
@each $breakpoint, $width in (
  sm: $breakpoint-sm,
  md: $breakpoint-md,
  lg: $breakpoint-lg,
  xl: $breakpoint-xl,
  xxl: $breakpoint-xxl
) {
  @include respond-to($breakpoint) {
    .top-#{$breakpoint}-0 { top: 0 !important; }
    .right-#{$breakpoint}-0 { right: 0 !important; }
    .bottom-#{$breakpoint}-0 { bottom: 0 !important; }
    .left-#{$breakpoint}-0 { left: 0 !important; }
    
    .top-#{$breakpoint}-50 { top: 50% !important; }
    .right-#{$breakpoint}-50 { right: 50% !important; }
    .bottom-#{$breakpoint}-50 { bottom: 50% !important; }
    .left-#{$breakpoint}-50 { left: 50% !important; }
    
    .top-#{$breakpoint}-100 { top: 100% !important; }
    .right-#{$breakpoint}-100 { right: 100% !important; }
    .bottom-#{$breakpoint}-100 { bottom: 100% !important; }
    .left-#{$breakpoint}-100 { left: 100% !important; }
  }
}

// Responsive transform utilities
@each $breakpoint, $width in (
  sm: $breakpoint-sm,
  md: $breakpoint-md,
  lg: $breakpoint-lg,
  xl: $breakpoint-xl,
  xxl: $breakpoint-xxl
) {
  @include respond-to($breakpoint) {
    .translate-#{$breakpoint}-middle { transform: translate(-50%, -50%) !important; }
    .translate-#{$breakpoint}-middle-x { transform: translateX(-50%) !important; }
    .translate-#{$breakpoint}-middle-y { transform: translateY(-50%) !important; }
  }
}

// Print utilities
@media print {
  .d-print-none { display: none !important; }
  .d-print-inline { display: inline !important; }
  .d-print-inline-block { display: inline-block !important; }
  .d-print-block { display: block !important; }
  .d-print-table { display: table !important; }
  .d-print-table-row { display: table-row !important; }
  .d-print-table-cell { display: table-cell !important; }
  .d-print-flex { display: flex !important; }
  .d-print-inline-flex { display: inline-flex !important; }
  
  .text-print-start { text-align: left !important; }
  .text-print-end { text-align: right !important; }
  .text-print-center { text-align: center !important; }
  .text-print-justify { text-align: justify !important; }
  
  .w-print-25 { width: 25% !important; }
  .w-print-50 { width: 50% !important; }
  .w-print-75 { width: 75% !important; }
  .w-print-100 { width: 100% !important; }
  .w-print-auto { width: auto !important; }
  
  .h-print-25 { height: 25% !important; }
  .h-print-50 { height: 50% !important; }
  .h-print-75 { height: 75% !important; }
  .h-print-100 { height: 100% !important; }
  .h-print-auto { height: auto !important; }
} 